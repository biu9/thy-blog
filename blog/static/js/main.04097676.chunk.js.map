{"version":3,"sources":["FrontPage/NavBar.tsx","FrontPage/Intro.tsx","FrontPage/Post.tsx","FrontPage/FrontContent.tsx","PageBottom/PageBottom.tsx","FrontPage/FrontPageApp.tsx","comment/SubAndPub.ts","comment/CommentInput.tsx","comment/Comment.tsx","comment/CommentList.tsx","comment/CommentApp.tsx","blog-page/BlogApp.tsx","blogs/ShowBlogs.tsx","home/Home.tsx","FrontPage/FrontPageRoute.tsx","index.tsx"],"names":["_callee2","_ref","userName","passWord","postData","response","regenerator_default","a","wrap","_context2","prev","next","JSON","stringify","password","fetch","method","headers","Content-Type","body","then","res","json","sent","abrupt","stop","NavBar","_useState","useState","_useState2","Object","slicedToArray","setUserName","_useState3","_useState4","setPassword","_useState5","_useState6","open","setOpen","navigate","useNavigate","react","Modal","className","TextField","label","variant","onBlur","e","target","value","Button","id","onClick","loginRes","handleLogin","asyncToGenerator","mark","_callee","_context","code","token","localStorage","setItem","time","Date","getTime","alert","react_router_dom","to","exp","data1","getItem","parse","getToken","Intro","Post","props","title","tags","content","FrontContent","posts","setPosts","useEffect","data","map","item","key","PageBotton","FrontPageApp","FrontPage_NavBar","FrontPage_Intro","FrontPage_FrontContent","defaultEvent","SubAndPub","classCallCheck","this","eventMap","createClass","handler","push","params","forEach","CommentInput","blogId","setContent","type","placeholder","onChange","domUserName","document","getElementById","domContent","updateComments","result","concat","emit","Comment","name","CommentList","comments","setComments","updateCommnts","setUpdateComments","on","console","log","comment_Comment","CommentApp","submitComment","comment_CommentInput","comment_CommentList","Markdown","require","BlogApp","comment_CommentApp","ShowBlogs","Home","setTitle","setTime","_useState7","_useState8","tag","setTag","uploadData","FrontPageRoute","Array","path","react_router","element","FrontPage_FrontPageApp","blogs_ShowBlogs","blog_page_BlogApp","ReactDOM","FrontPage_FrontPageRoute"],"mappings":"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","file":"static/js/main.04097676.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from '@mui/material/Modal';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../style/nav-modal.css';\r\n\r\n\r\nfunction setToken(token: string):void {\r\n    localStorage.setItem('token', JSON.stringify({\r\n        token: token,\r\n        time: new Date().getTime()\r\n    }));\r\n};\r\n\r\nfunction getToken(exp:number):Boolean {\r\n    const data1 = localStorage.getItem('token');\r\n    if(!data1) {\r\n        return false;\r\n    } else {\r\n        const data = JSON.parse(data1);\r\n        if(data.time + exp < new Date().getTime()) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n} \r\n\r\n\r\nasync function handleLogin({ userName, passWord }: { userName: string, passWord: string }) {\r\n    const postData = JSON.stringify({\r\n        \"userName\": userName,\r\n        \"password\": passWord\r\n    });\r\n    const response = await fetch('http://localhost:1234/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: postData,\r\n    }).then(res => res.json());\r\n    //console.log(response.code);\r\n    return response;\r\n}\r\n\r\nfunction NavBar() {\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    function handleUsername(e: React.FocusEvent<HTMLInputElement>): void {\r\n        setUserName(e.target.value);\r\n        //console.log(\"username:\",userName);\r\n    }\r\n    function handlePassword(e: React.FocusEvent<HTMLInputElement>): void {\r\n        setPassword(e.target.value);\r\n        //console.log(\"password:\",password);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                open={open}\r\n            >\r\n                <div className='modal-container'>\r\n                    <div className='modal-words'>请先登录</div>\r\n                    <TextField\r\n                        className=\"modal-input\"\r\n                        label=\"user name\"\r\n                        variant='filled'\r\n                        onBlur={handleUsername} />\r\n                    <TextField\r\n                        className=\"modal-input\"\r\n                        label=\"password\"\r\n                        variant='filled'\r\n                        onBlur={handlePassword} />\r\n                    <Button\r\n                        variant='contained'\r\n                        className='modal-btn'\r\n                        id=\"submitBtn\"\r\n                        onClick={() => {//原来react里面组件更新时候挂载的事件监听函数不会移除?\r\n                            setOpen(false);\r\n                            const loginRes = handleLogin({ userName: userName, passWord: password });\r\n                            (async()=>{\r\n                                const res = await loginRes;\r\n                                if (res.code === 200) {\r\n                                    setToken(res.token);\r\n                                    navigate('/home');\r\n                                } else {\r\n                                    alert(\"用户名或密码错误\");\r\n                                    //navigate('/');\r\n                                }\r\n                            })();\r\n                        }}\r\n                    >\r\n                        submit\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n            <div className='navbar-container'>\r\n                <div className='navbar-left'>\r\n                    <Link to='/' className='nav-link'>\r\n                        thy's blog\r\n                    </Link>\r\n                </div>\r\n                <div className='navbar-right'>\r\n                    <div className='navbar-right-item' id='home'\r\n                    onClick={() => {\r\n                        if(getToken(1000*60*60*24)){\r\n                            navigate('/home');\r\n                            return;\r\n                        } else{\r\n                            setOpen(true);                            \r\n                        }\r\n                    }}\r\n                    >\r\n                        home\r\n                    </div>\r\n                    <div className='navbar-right-item'>\r\n                        projects\r\n                    </div>\r\n                    <div className='navbar-right-item'>\r\n                        <Link to='/blogs' className='nav-link'>\r\n                            blogs\r\n                        </Link>\r\n                    </div>\r\n                    <div className='navbar-right-item'>\r\n                        more\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import * as React from 'react';\r\n\r\nfunction Intro() {\r\n    return(\r\n        <div className='intro-container'>\r\n            <div className='intro-decroation-circle'></div>\r\n            <div className='intro-bg'>\r\n            <div className='intro-left'>\r\n                <div className='intro-pic'>\r\n                </div>\r\n                <h3 className='intro-name'>\r\n                    thy\r\n                </h3>\r\n                <div className='intro-relate'>\r\n                    ZJU / EE / 大二\r\n                </div>\r\n            </div>\r\n            <div className='intro-right'>\r\n                <h1 className='intro-right-title'>\r\n                Biography\r\n                </h1>\r\n                <div className='intro-right-content'>\r\n                👋 Hi, I'm @biu9,a student studying in ZheJiang university\r\n                </div>\r\n                <div className='intro-right-content'>\r\n                👀 I'm interested in web development\r\n                </div>\r\n                <div className='intro-right-content'>\r\n                🌱 I'm currently learning React and TypeScript\r\n                </div>\r\n                <div className='intro-right-content'>\r\n                💞️ I'm looking to collaborate on develop a awesome web site\r\n                </div>\r\n                <div className='intro-right-content'>\r\n                📫 How to reach me: 1756127061@qq.com                \r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Intro;","import * as React from 'react';\r\n\r\n\r\ninterface PostListProps {\r\n    \"title\": string;\r\n    \"time\": string;\r\n    \"content\": string;\r\n    \"tags\": string[];\r\n}\r\n\r\n\r\nexport default function Post(props: PostListProps) {\r\n    //console.log(props);\r\n    return (\r\n        <div className='post-container'>\r\n            \r\n            <div className='post-right'>\r\n                <h2 className='post-title'>\r\n                {props.title}\r\n                </h2>\r\n                <p className='post-detail'>\r\n                    | {props.time} | {props.tags} |\r\n                </p>\r\n                <p className='post-content'>\r\n                    {props.content}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import * as React from 'react';\r\nimport Post from './Post';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction FrontContent() {\r\n\r\n    var [posts, setPosts] = useState<any[]>([]);\r\n    useEffect(() => {\r\n        (async () => {\r\n            const response = await fetch('http://localhost:1234/api/getPosts', {\r\n                method: 'get',\r\n            }).then(res => res.json());\r\n            setPosts(response.data);\r\n        })();\r\n    }, []);\r\n    //console.log(posts);\r\n\r\n    return (\r\n        <div className='front-content-bg'>\r\n            <div className='front-content-container'>\r\n                <div className='front-content-left'>\r\n                    <div className='front-content-left-title'>\r\n                        <h1>\r\n                            Recent post\r\n                        </h1>\r\n                        {posts.map(item => {\r\n                            return (\r\n                                <Link to={'/' + item.id} className='post-link'>\r\n                                    <Post\r\n                                        title={item.title}\r\n                                        time={item.time}\r\n                                        content={item.content}\r\n                                        key={item.id}\r\n                                        tags={item.tags}\r\n                                    />\r\n                                </Link>)\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className='front-content-right'>\r\n                    <div className='front-content-right-title'>\r\n                        <h2>\r\n\r\n                        </h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FrontContent;","import * as React from 'react';\r\nimport '../style/page-bottom.css'\r\nexport default function PageBotton() {\r\n    return(\r\n        <div className='page-bottom-container'>\r\n            <div>\r\n                前端:React+typescript+material UI\r\n            </div>\r\n            <div>\r\n                后端:Node.js+express+TencentDB\r\n            </div>\r\n            <div>\r\n                服务器:腾讯云轻量应用服务器+tomcat\r\n            </div>\r\n            <div>\r\n                @All Rights Reserved 2022\r\n            </div>\r\n        </div>\r\n    )\r\n}","import * as React from 'react';\r\nimport NavBar from './NavBar';\r\nimport Intro from './Intro';\r\nimport FrontContent from './FrontContent';\r\nimport { BrowserRouter ,Route } from 'react-router-dom';\r\nimport '../style/front.css';\r\nimport PageBottom from '../PageBottom/PageBottom';\r\n\r\nfunction FrontPageApp() {\r\n    return(\r\n        <div className='fontpage-container'>\r\n            <NavBar/>\r\n            <Intro/>\r\n            <FrontContent/>\r\n            <PageBottom/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FrontPageApp;","export class SubAndPub {\r\n    private eventMap: Record<string, ((params: any) => any)[]>\r\n    constructor() {\r\n        this.eventMap = {}\r\n    }\r\n    /**\r\n     * 订阅函数\r\n     * @key 订阅事件名\r\n     * @handler 订阅事件\r\n     */\r\n    on(key: string, handler: (params: any) => any) {\r\n        if (!this.eventMap[key]) {\r\n            this.eventMap[key] = [];\r\n        }\r\n        this.eventMap[key].push(handler);\r\n    }\r\n\r\n    /**\r\n     * 发布函数\r\n     * @key 发布事件名\r\n     * @params 发布参数\r\n     */\r\n    emit(key: string, params: any) {\r\n        if (this.eventMap[key]) {\r\n            this.eventMap[key].forEach((handler) => {\r\n                handler(params);\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nconst defaultEvent = new SubAndPub();\r\nexport default defaultEvent;","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport '../style/comment.css'\r\nimport defaultEvent from './SubAndPub';\r\n\r\nfunction CommentInput({blogId}: {blogId: string}) {\r\n    const [userName, setUserName] = useState('');\r\n    const [content, setContent] = useState('');\r\n\r\n    function handleUserNameChange(e:React.ChangeEvent<HTMLInputElement>):void {\r\n        setUserName(e.target.value);\r\n    }\r\n\r\n    function handleContentChange(e:React.ChangeEvent<HTMLTextAreaElement>):void {\r\n        setContent(e.target.value);\r\n    }\r\n\r\n    function handleSubmit() {\r\n        const domUserName = document.getElementById('userName') as HTMLInputElement;\r\n        const domContent = document.getElementById('content') as HTMLInputElement;\r\n        var updateComments = new Date().getTime();\r\n        var result = JSON.stringify({\r\n            \"userName\": userName,\r\n            \"content\": content\r\n        });\r\n        if(userName === '' || content === '') {\r\n            alert('请输入用户名和评论内容');\r\n            return;\r\n        }\r\n        fetch(`http://localhost:1234/api/postComments/?id=${blogId}`,{\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: result\r\n        });\r\n        if(domUserName) {\r\n            domUserName.value = '';\r\n        }\r\n        if(domContent) {\r\n            domContent.value = '';\r\n        }\r\n        defaultEvent.emit(\"commentInput\",updateComments);\r\n    }\r\n\r\n    return(\r\n        <div className='comment-input-container'>\r\n            <div className='comment-input'>\r\n            <div className='comment-header'>\r\n                <div className='comment-header-left'>\r\n                    姓名:\r\n                </div>\r\n                <input \r\n                className='comment-header-right' \r\n                type='text'\r\n                placeholder='请输入你的名字'\r\n                id='userName'\r\n                onChange={handleUserNameChange}/>\r\n            </div>\r\n            <div className='comment-body'>\r\n                <div className='comment-body-left'>\r\n                    内容:\r\n                </div>\r\n                <textarea \r\n                className='comment-body-right' \r\n                id='content'\r\n                onChange={handleContentChange}\r\n                placeholder='请输入你的评论'/>\r\n            </div>\r\n            <div className='submit'>\r\n                <button className='submit-btn'\r\n                onClick={handleSubmit}>\r\n                    提交\r\n                </button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CommentInput;","import * as React from 'react';\r\n\r\nexport interface CommentProps {\r\n    name: string;\r\n    content: string;\r\n}\r\n\r\nfunction Comment(props: CommentProps) {\r\n    return(\r\n        <div className='comment-container'>\r\n            <div className='comment-name'>\r\n                {props.name}\r\n            </div>\r\n            <div className='comment-content'>\r\n                {props.content}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment;","import * as React from 'react';\r\nimport Comment from './Comment';\r\nimport { useEffect,useState} from 'react';\r\nimport defaultEvent from './SubAndPub';\r\n\r\nfunction CommentList({blogId}:{blogId: string}) {\r\n    var [comments, setComments] = useState<any[]>([]);\r\n    var [updateCommnts,setUpdateComments] = useState(0);\r\n    defaultEvent.on(\"commentInput\",(params:any)=>{\r\n        console.log(\"list组件接收到了commentInput事件\");\r\n        setUpdateComments(params);\r\n    });\r\n    console.log(\"list组件渲染了\");\r\n    useEffect(() => {\r\n        (async () => {\r\n            console.log(\"向服务器请求评论\",`http://localhost:1234/api/getComments/?id=${blogId}`);\r\n            const response = await fetch(`http://localhost:1234/api/getComments/?id=${blogId}`, {\r\n                method: 'get',\r\n            }).then(res => res.json());\r\n            setComments(response.data);\r\n        })();\r\n    }, [updateCommnts]);\r\n    return (\r\n        <div className='comment-list-container'>\r\n            {comments.map(item => {\r\n                return <Comment name={item.name} content={item.content} key={item.id}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentList;","import * as React from 'react';\r\nimport CommentInput from './CommentInput';\r\nimport CommentList from './CommentList';\r\nimport { useState } from 'react';\r\nimport '../style/comment.css'\r\n\r\nfunction CommentApp({ blogId }: { blogId: string }) {\r\n    const [submitComment, setSubmitComment] = useState(0);\r\n    function updateComment() {\r\n        setSubmitComment(submitComment => submitComment + 1);\r\n        alert(\"评论成功\");\r\n    }\r\n    console.log(submitComment);\r\n    return (\r\n        <div className='CommentApp-container'>\r\n            <h1>\r\n                Comments\r\n            </h1>\r\n            <div className='comment-app-input-container'>\r\n            <CommentInput \r\n            blogId={blogId}\r\n            />\r\n            </div>\r\n                <CommentList \r\n                blogId={blogId}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentApp;","import * as React from 'react';\r\nimport NavBar from '../FrontPage/NavBar';\r\nimport CommentApp from '../comment/CommentApp';\r\nimport '../style/blog.css';\r\nimport PageBottom  from '../PageBottom/PageBottom';\r\n\r\nvar Markdown = require('react-remarkable');\r\n\r\ninterface BlogProps {\r\n    \"title\": string;\r\n    \"time\": string;\r\n    \"content\": string;\r\n    \"tags\": string[];\r\n    \"blogId\":string;\r\n}\r\n\r\nfunction BlogApp(props: BlogProps) {\r\n    //console.log(\"content=====\",(props.content));\r\n    return (\r\n        <div className='blog-container-bg'>\r\n            <NavBar />\r\n            <div className='blog-container'>\r\n                <h1 className='blog-title'>\r\n                    {props.title}\r\n                </h1>\r\n                <p className='blog-detail'>\r\n                    | {props.time} | {props.tags} |\r\n                </p>\r\n                <p className='blog-content'>\r\n                    <Markdown>\r\n                    {props.content}\r\n                    </Markdown>\r\n                </p>\r\n            </div>\r\n            <CommentApp\r\n            blogId={props.blogId}\r\n            />\r\n            <PageBottom/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default BlogApp;","import * as React from 'react';\r\nimport NavBar from '../FrontPage/NavBar';\r\n\r\n\r\nfunction ShowBlogs() {\r\n    return(\r\n        <div>\r\n            <NavBar/>\r\n            <h1>ShowBlogs</h1>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ShowBlogs;","import NavBar from \"../FrontPage/NavBar\";\r\nimport * as React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useRef, useState } from \"react\";\r\nimport { TextField, Button } from \"@mui/material\";\r\nimport '../style/home.css'\r\n\r\nfunction getToken(exp: number): Boolean {\r\n    const data1 = localStorage.getItem('token');\r\n    if (!data1) {\r\n        return false;\r\n    } else {\r\n        const data = JSON.parse(data1);\r\n        if (data.time + exp < new Date().getTime()) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\r\nfunction useComponentWillMount(func: Function) {\r\n    const ref = useRef(true);\r\n    if (ref.current) {\r\n        func();\r\n        ref.current = false;\r\n    }\r\n}\r\n\r\nfunction uploadDataFunc(data:any) {\r\n    fetch('http://localhost:1234/api/uploadBlog', {\r\n        method: 'post',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: data\r\n    });\r\n}\r\n\r\nexport default function Home() {\r\n    const navigate = useNavigate();\r\n    const [title, setTitle] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [tag, setTag] = useState('');\r\n    if (!getToken(1000 * 60 * 60 * 24)) {\r\n        //本来想做到如果没有登录先弹窗再跳转回首页\r\n        //但是由于useNavigate()有点奇怪?\r\n        //在component will mount的时候判断的话不会跳转回去，推测是路由重定向的优先级问题？\r\n        //可能是先重定向到了'/'，再重定向回了'/home'?\r\n        //而且alert会出现两次，第二次出现后才会跳转回首页(指不加willmount钩子的时候)\r\n        navigate('/');\r\n    }\r\n\r\n    function handleTitle(e: React.FocusEvent<HTMLInputElement>): void {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    function handleTime(e: React.FocusEvent<HTMLInputElement>): void {\r\n        setTime(e.target.value);\r\n    }\r\n\r\n    function handleContent(e: React.FocusEvent<HTMLTextAreaElement>): void {\r\n        setContent(e.target.value);\r\n    }\r\n\r\n    function handleTag(e: React.FocusEvent<HTMLInputElement>):void {\r\n        setTag(e.target.value);\r\n    }\r\n\r\n    function handleSubmit() {\r\n        const uploadData = JSON.stringify({\r\n            \"title\": title,\r\n            \"time\": time,\r\n            \"content\": content,\r\n            \"tag\": tag,\r\n        });\r\n        uploadDataFunc(uploadData);\r\n        console.log(uploadData);\r\n        alert('上传成功');\r\n        setContent('');\r\n        setTitle('');\r\n        setTime('');\r\n        setTag('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <NavBar />\r\n            <div className=\"input-container\">\r\n                <TextField\r\n                    className=\"home-title\"\r\n                    label=\"标题\"\r\n                    variant=\"filled\"\r\n                    onBlur={handleTitle}\r\n                />\r\n                <TextField\r\n                    className=\"home-time\"\r\n                    label=\"时间\"\r\n                    variant=\"filled\"\r\n                    onBlur={handleTime}\r\n                />\r\n                <TextField\r\n                className=\"home-tag\"\r\n                label=\"标签\"\r\n                variant=\"filled\"\r\n                onBlur={handleTag}\r\n                />\r\n                <textarea\r\n                className=\"home-content\"\r\n                placeholder=\"内容\"\r\n                onBlur={handleContent}\r\n                />\r\n                <Button\r\n                    className=\"home-submit\"\r\n                    variant=\"contained\"\r\n                    onClick={handleSubmit}\r\n                >提交</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import * as React from 'react';\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\nimport FrontPageApp from './FrontPageApp';\r\nimport BlogApp from '../blog-page/BlogApp';\r\nimport ShowBlogs from '../blogs/ShowBlogs';\r\nimport Home from '../home/Home';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction FrontPageRoute() {\r\n    var params = new Array();\r\n\r\n    var [posts, setPosts] = useState<any[]>([]);\r\n    useEffect(() => {\r\n        (async () => {\r\n            const response = await fetch('http://localhost:1234/api/getPosts', {\r\n                method: 'get',\r\n            }).then(res => res.json());\r\n            setPosts(response.data);\r\n        })();\r\n    }, []);\r\n    //console.log(\"用于创建路由的参数:\", posts);\r\n    posts.map(item => {\r\n        params.push(JSON.stringify({\r\n            path: '/' + item.id,\r\n            title: item.title,\r\n            time: item.time,\r\n            content: item.content,\r\n            tags: item.tags,\r\n            id: item.id,\r\n        }))\r\n    });\r\n    //console.log(\"params\", params);\r\n    return (\r\n        <BrowserRouter>\r\n            <Routes>\r\n                <Route path='/' element={<FrontPageApp />} />\r\n                <Route path='/blogs' element={<ShowBlogs />} />\r\n                <Route path='/home' element={<Home />} />\r\n                {params.map(item => {\r\n                    //console.log(JSON.parse(item).path);\r\n                    return (\r\n                        <Route\r\n                            path={JSON.parse(item).path}\r\n                            element={<BlogApp \r\n                                title={JSON.parse(item).title}\r\n                                time={JSON.parse(item).time}\r\n                                content={JSON.parse(item).content}\r\n                                tags={JSON.parse(item).tags}\r\n                                key={JSON.parse(item).id}\r\n                                blogId={JSON.parse(item).id}\r\n                            />}\r\n                        />\r\n                    )\r\n                })}\r\n            </Routes>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default FrontPageRoute;","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport FrontPageRoute from './FrontPage/FrontPageRoute';\r\n\r\nReactDOM.render(\r\n    <FrontPageRoute/>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}